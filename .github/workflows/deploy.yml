name: Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REPO: ${{ github.repository }}

jobs:
  build:
    strategy:
      matrix:
        image:
          - name: python3.10
            python_version: "3.10"
          - name: python3.12
            python_version: "3.12"
          - name: python3.11
            python_version: "3.11"
          - name: python3.11-slim
            python_version: "3.11"
          - name: python3.12-slim
            python_version: "3.12"
          - name: python3.10-slim
            python_version: "3.10"
      fail-fast: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
        with:
          prefix: CI_

      - name: set lower case owner name
        run: |
          echo "REPO_SOURCE=${REPO,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build images
        uses: docker/build-push-action@v3
        with:
          context: docker-images/
          push: ${{ github.event_name != 'pull_request' }}
          file: docker-images/${{ matrix.image.name }}.dockerfile
          build-args: GIT_URL=${{ github.repositoryUrl }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_SOURCE }}/uvicorn-gunicorn-fastapi:${{ matrix.image.name }}-${{ env.CI_GITHUB_SHA_SHORT }}
            ${{ env.REGISTRY }}/${{ env.REPO_SOURCE }}/uvicorn-gunicorn-fastapi:${{ matrix.image.name }}-latest

